name: windows_build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  windows:
    runs-on: windows-2016
    defaults:
      run:
        shell: bash
    env:
      VSCODE_ARCH: ${{ matrix.vscode_arch }}
      OS_NAME: 'windows'
    strategy:
      fail-fast: false
      matrix:
        vscode_arch: [x64]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install Yarn
        run: npm install -g yarn

      - name: Setup Python 2
        uses: actions/setup-python@v2
        with:
          python-version: '2.x'

      - name: Clone VSCode repo
        run: ./get_repo.sh

      - name: Check PR or cron
        run: ./check_cron_or_pr.sh

      - name: Check existing VSCodium tags/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./check_tags.sh

      - name: patch
        run: python patch.py
        
      - name: Compute cache key
        id: yarnCacheKey
        run: echo "::set-output name=value::$(node build/azure-pipelines/computeYarnCacheKey.js)"


      - name: Get yarn cache directory path
        id: yarnCacheDirPath
        run: echo "::set-output name=dir::$(yarn cache dir)"


      - name: Cache yarn directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarnCacheDirPath.outputs.dir }}
          key: ${{ env.OS_NAME }}-${{ env.VSCODE_ARCH }}-yarnCacheDir-${{ steps.yarnCacheKey.outputs.value }}
          restore-keys: ${{ env.OS_NAME }}-${{ env.VSCODE_ARCH }}-yarnCacheDir-


      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_arch: ${{ matrix.vscode_arch }}
          npm_config_target_arch: ${{ matrix.vscode_arch }}
        run: ./build.sh


      - name: Prepare artifacts
        run: ./prepare_artifacts.sh

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'release.zip'
          path: 'artifacts/'
      - name: release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE.txt
            release.zip

